# WorkFlow based in @muchobien

name: Relase on pocketbase/release
on:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

env:
  REGISTRY_IMAGE: augustodelg/pocketbase

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Fetch latest pocketbase version
        id: pocketbase
        uses: augustodelg/repo-get-releases@main
        with:
          repository: pocketbase/pocketbase
          excludes: draft,prerelease
          
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Read file contents
        id: set_processed_version
        run: |
          version=`cat ./.version`
          echo "::set-output name=processed_version::$version"

      - name: Cancel if there is no changes
        if: ${{ steps.pocketbase.outputs.version == steps.set_processed_version.outputs.processed_version && github.event_name != 'workflow_dispatch' }}
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Version already released')


      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to ghcr
        uses: docker/login-action@v2
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PASS_SECRET }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.pocketbase.outputs.version }}-${{ matrix.platform }}

      - name: Build and push 
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            POCKETBASE_VERSION=${{ steps.pocketbase.outputs.version }}
            TARGETPLATFORM=${{ matrix.platform }}
          tags: ${{ steps.meta.outputs.tags }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"          
      - name: Upload digest
        uses: actions/upload-artifact@v3
        with:
          name: digests
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v3
        with:
          name: digests
          path: /tmp/digests
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.PASS_SECRET }}
      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          MANIFEST_DIGESTS=$(ls -m | sed 's/ /,/g' | sed 's/^/${{ env.REGISTRY_IMAGE }}@sha256:/')
          docker buildx imagetools create $MANIFEST_DIGESTS --tag ${{ env.REGISTRY_IMAGE }}:${{ steps.pocketbase.outputs.version }}
          docker buildx imagetools create $MANIFEST_DIGESTS --tag ${{ env.REGISTRY_IMAGE }}:latest

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
          
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Overwrite version file
        run: |
          echo "${{ steps.pocketbase.outputs.version }}" >  .version

      - name: Commit files
        run: |
          git config --local user.email "taca@github-actions.com"
          git config --local user.name "taca-bot"
          git commit -m "Commit for version ${{ steps.pocketbase.outputs.version }}" -a

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
